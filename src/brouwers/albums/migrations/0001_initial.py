# Generated by Django 1.10 on 2016-08-11 20:30

import datetime

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.utils.timezone import utc

import brouwers.albums.models
import brouwers.forum_tools.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=256, verbose_name="album title"
                    ),
                ),
                (
                    "clean_title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=256,
                        verbose_name="album title",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="album description"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="last modified"),
                ),
                (
                    "last_upload",
                    models.DateTimeField(
                        db_index=True,
                        default=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=utc),
                    ),
                ),
                ("views", models.PositiveIntegerField(default=0)),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        db_index=True,
                        default=1,
                        null=True,
                        verbose_name="order",
                    ),
                ),
                (
                    "public",
                    models.BooleanField(
                        default=True,
                        help_text="Can this album be viewed by everyone? Untick to make the album available only to yourself.",
                        verbose_name="Public?",
                    ),
                ),
                (
                    "topic",
                    brouwers.forum_tools.fields.ForumToolsIDField(
                        blank=True,
                        null=True,
                        type="topic",
                        verbose_name="build report topic",
                    ),
                ),
                ("votes", models.IntegerField(default=0, verbose_name="appreciation")),
                (
                    "writable_to",
                    models.CharField(
                        choices=[("u", "owner"), ("o", "everyone")],
                        default="u",
                        help_text="Specify who can upload images in this album",
                        max_length=1,
                        verbose_name="writable to",
                    ),
                ),
                ("trash", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ("order", "title"),
                "verbose_name": "album",
                "verbose_name_plural": "albums",
                "permissions": (
                    ("edit_album", "Can edit/remove album"),
                    ("see_all_albums", "Can see all albums"),
                    ("access_albums", "Can use new albums"),
                ),
            },
        ),
        migrations.CreateModel(
            name="AlbumDownload",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="timestamp"),
                ),
                ("failed", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="albums.Album"
                    ),
                ),
                (
                    "downloader",
                    models.ForeignKey(
                        help_text="user who downloaded the album",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
                "verbose_name": "album download",
                "verbose_name_plural": "album downloads",
            },
        ),
        migrations.CreateModel(
            name="AlbumGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "album",
                    models.OneToOneField(
                        help_text="Album for which the group has write permissions.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="albums.Album",
                        verbose_name="album",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users who can write in this album.",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="users",
                    ),
                ),
            ],
            options={
                "ordering": ("album",),
                "verbose_name": "album group",
                "verbose_name_plural": "album groups",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, unique=True, verbose_name="name"),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, default=1, null=True, verbose_name="order"
                    ),
                ),
                (
                    "url",
                    models.URLField(blank=True, max_length=500, verbose_name="url"),
                ),
                (
                    "on_frontpage",
                    models.BooleanField(default=False, verbose_name="on frontpage"),
                ),
                (
                    "public",
                    models.BooleanField(
                        default=True,
                        help_text="If the category is public, regular users can add their albums to the category. If it isn't, only people with admin permissions can do so.",
                        verbose_name="public",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "name"],
                "verbose_name": "category",
                "verbose_name_plural": "categories",
            },
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "width",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="width"
                    ),
                ),
                (
                    "height",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="height"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        height_field="height",
                        max_length=200,
                        upload_to=brouwers.albums.models.get_image_path,
                        verbose_name="image",
                        width_field="width",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="photo description"
                    ),
                ),
                ("uploaded", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="last modified"),
                ),
                ("views", models.PositiveIntegerField(default=0)),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, db_index=True, default=1, null=True
                    ),
                ),
                ("trash", models.BooleanField(default=False)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="albums.Album"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["album", "order", "pk"],
                "verbose_name": "Photo",
                "verbose_name_plural": "Photos",
            },
        ),
        migrations.CreateModel(
            name="Preferences",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "auto_start_uploading",
                    models.BooleanField(
                        default=False,
                        help_text="Start upload automatically when files are selected",
                        verbose_name="start uploading automatically?",
                    ),
                ),
                (
                    "paginate_by_sidebar",
                    models.SmallIntegerField(
                        default=25,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(1),
                        ],
                        verbose_name="sidebar number of photos per page",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("user",),
                "verbose_name": "User preferences",
                "verbose_name_plural": "User preferences",
            },
        ),
        migrations.AddField(
            model_name="album",
            name="category",
            field=models.ForeignKey(
                blank=True,
                default=1,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="albums.Category",
                verbose_name="category",
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="cover",
            field=models.ForeignKey(
                blank=True,
                help_text="Image to use as album cover.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="cover",
                to="albums.Photo",
                verbose_name="cover",
            ),
        ),
        migrations.AddField(
            model_name="album",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="album", unique_together=set([("user", "title")]),
        ),
    ]
